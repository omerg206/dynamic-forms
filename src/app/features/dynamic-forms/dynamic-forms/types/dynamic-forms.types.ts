
// Generated by https://quicktype.io

export interface FormsTypeSchema {
  result: Result;
}

export interface Result {
  schemasList: SchemasList[];
}

export interface SchemasList {
  type: string;
  display: string;
}

export interface SelectionOption {
  value: string, label: string
}

export interface FormDetailsFromServer {
  [key: string]: FormPropertiesFromServer | FormDetailsFromServer
}


export interface FormPropertiesFromServer {
  type: 'String' | 'Date' | 'Enum' | 'Boolean';
  require?: boolean;
  enumValues?: string[];
  value?: boolean;
}



export interface ServerFromDetailsSchemaPropValue {
  [key: string]: string | ServerFromDetailsSchemaPropValue
}

export interface ServerFormDetailsResponse {
  succeeded: boolean;
  result: { scheme: ServerFromDetailsSchemaPropValue }

}

export enum ConvertServerFiledTypeToFormType {
  String = 'input',
  Date = 'datepicker',
  Enum = 'select',
  Boolean = 'checkbox'
}

/// can be made better with Generic types
export interface SubmitDataToServer {
  type: string,
  form: object
}
